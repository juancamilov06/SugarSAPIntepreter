// Generated by delombok at Mon Jul 17 16:54:09 COT 2017
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.com.arrendamientosnutibara.sugarinterpreterrest.entites;

import org.json.JSONException;
import org.json.JSONObject;

/**
 * @author Juan Camilo Villa Amaya
 */
public class Property {
    //Clave primaria 
    private String id;
    //Codigo interno del inmueble
    private String code;
    //Direccion del inmueble
    private String address;
    //Datos extra del inmueble. EJ. Nombre de la unidad residencial, cerca a.
    private String assignment;
    //Valor actual que paga el arrendatario
    private int canon;
    //Numero de contrato que se celebra con EPM
    private String epmcontract;
    //Barrio donde se encuentra el inmueble
    private String neighborhood;
    //Sector de ubicacion del inmueble: EJ. CENTRO, NORTE.
    private String sector;
    //Estrato del inmueble
    private String stratum;
    //Numero de llaves que deja el propietario
    private String keynumber;
    //Numero de ubicacion de las llaves
    private String keylocation;
    //Latitud del inmueble
    private double latitude;
    //Longitud del inmueble
    private double longitude;
    //Situacion actual del inmueble, Pendiente, Normal, Cons. SantaFe.
    private String situation;
    //Causa del retiro de la propiedad
    private String retirementcause;
    //Municipio donde se encuentra el inmueble
    private String city;
    //Observaciones del inmueble
    private String observations;
    //Observaciones del estado o condiciones del inmueble. EJ. Puertas 
    //sin pintar, no mascotas.
    private String extraobservations;
    //Se refiere a si el inmueble es de Nutibara o de Santa Fe
    private String propertyof;

    public static String extractProperty(String body) throws JSONException {
        JSONObject object = new JSONObject(body);
        System.out.println(object.getJSONObject("property"));
        return "";
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public Property() {
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getId() {
        return this.id;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCode() {
        return this.code;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getAddress() {
        return this.address;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getAssignment() {
        return this.assignment;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int getCanon() {
        return this.canon;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getEpmcontract() {
        return this.epmcontract;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getNeighborhood() {
        return this.neighborhood;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getSector() {
        return this.sector;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getStratum() {
        return this.stratum;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getKeynumber() {
        return this.keynumber;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getKeylocation() {
        return this.keylocation;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public double getLatitude() {
        return this.latitude;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public double getLongitude() {
        return this.longitude;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getSituation() {
        return this.situation;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getRetirementcause() {
        return this.retirementcause;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getCity() {
        return this.city;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getObservations() {
        return this.observations;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getExtraobservations() {
        return this.extraobservations;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public String getPropertyof() {
        return this.propertyof;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setId(final String id) {
        this.id = id;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setCode(final String code) {
        this.code = code;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setAddress(final String address) {
        this.address = address;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setAssignment(final String assignment) {
        this.assignment = assignment;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setCanon(final int canon) {
        this.canon = canon;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setEpmcontract(final String epmcontract) {
        this.epmcontract = epmcontract;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setNeighborhood(final String neighborhood) {
        this.neighborhood = neighborhood;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setSector(final String sector) {
        this.sector = sector;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setStratum(final String stratum) {
        this.stratum = stratum;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setKeynumber(final String keynumber) {
        this.keynumber = keynumber;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setKeylocation(final String keylocation) {
        this.keylocation = keylocation;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setLatitude(final double latitude) {
        this.latitude = latitude;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setLongitude(final double longitude) {
        this.longitude = longitude;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setSituation(final String situation) {
        this.situation = situation;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setRetirementcause(final String retirementcause) {
        this.retirementcause = retirementcause;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setCity(final String city) {
        this.city = city;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setObservations(final String observations) {
        this.observations = observations;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setExtraobservations(final String extraobservations) {
        this.extraobservations = extraobservations;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public void setPropertyof(final String propertyof) {
        this.propertyof = propertyof;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Property)) return false;
        final Property other = (Property) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$id = this.getId();
        final java.lang.Object other$id = other.getId();
        if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
        final java.lang.Object this$code = this.getCode();
        final java.lang.Object other$code = other.getCode();
        if (this$code == null ? other$code != null : !this$code.equals(other$code)) return false;
        final java.lang.Object this$address = this.getAddress();
        final java.lang.Object other$address = other.getAddress();
        if (this$address == null ? other$address != null : !this$address.equals(other$address)) return false;
        final java.lang.Object this$assignment = this.getAssignment();
        final java.lang.Object other$assignment = other.getAssignment();
        if (this$assignment == null ? other$assignment != null : !this$assignment.equals(other$assignment)) return false;
        if (this.getCanon() != other.getCanon()) return false;
        final java.lang.Object this$epmcontract = this.getEpmcontract();
        final java.lang.Object other$epmcontract = other.getEpmcontract();
        if (this$epmcontract == null ? other$epmcontract != null : !this$epmcontract.equals(other$epmcontract)) return false;
        final java.lang.Object this$neighborhood = this.getNeighborhood();
        final java.lang.Object other$neighborhood = other.getNeighborhood();
        if (this$neighborhood == null ? other$neighborhood != null : !this$neighborhood.equals(other$neighborhood)) return false;
        final java.lang.Object this$sector = this.getSector();
        final java.lang.Object other$sector = other.getSector();
        if (this$sector == null ? other$sector != null : !this$sector.equals(other$sector)) return false;
        final java.lang.Object this$stratum = this.getStratum();
        final java.lang.Object other$stratum = other.getStratum();
        if (this$stratum == null ? other$stratum != null : !this$stratum.equals(other$stratum)) return false;
        final java.lang.Object this$keynumber = this.getKeynumber();
        final java.lang.Object other$keynumber = other.getKeynumber();
        if (this$keynumber == null ? other$keynumber != null : !this$keynumber.equals(other$keynumber)) return false;
        final java.lang.Object this$keylocation = this.getKeylocation();
        final java.lang.Object other$keylocation = other.getKeylocation();
        if (this$keylocation == null ? other$keylocation != null : !this$keylocation.equals(other$keylocation)) return false;
        if (java.lang.Double.compare(this.getLatitude(), other.getLatitude()) != 0) return false;
        if (java.lang.Double.compare(this.getLongitude(), other.getLongitude()) != 0) return false;
        final java.lang.Object this$situation = this.getSituation();
        final java.lang.Object other$situation = other.getSituation();
        if (this$situation == null ? other$situation != null : !this$situation.equals(other$situation)) return false;
        final java.lang.Object this$retirementcause = this.getRetirementcause();
        final java.lang.Object other$retirementcause = other.getRetirementcause();
        if (this$retirementcause == null ? other$retirementcause != null : !this$retirementcause.equals(other$retirementcause)) return false;
        final java.lang.Object this$city = this.getCity();
        final java.lang.Object other$city = other.getCity();
        if (this$city == null ? other$city != null : !this$city.equals(other$city)) return false;
        final java.lang.Object this$observations = this.getObservations();
        final java.lang.Object other$observations = other.getObservations();
        if (this$observations == null ? other$observations != null : !this$observations.equals(other$observations)) return false;
        final java.lang.Object this$extraobservations = this.getExtraobservations();
        final java.lang.Object other$extraobservations = other.getExtraobservations();
        if (this$extraobservations == null ? other$extraobservations != null : !this$extraobservations.equals(other$extraobservations)) return false;
        final java.lang.Object this$propertyof = this.getPropertyof();
        final java.lang.Object other$propertyof = other.getPropertyof();
        if (this$propertyof == null ? other$propertyof != null : !this$propertyof.equals(other$propertyof)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Property;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $id = this.getId();
        result = result * PRIME + ($id == null ? 43 : $id.hashCode());
        final java.lang.Object $code = this.getCode();
        result = result * PRIME + ($code == null ? 43 : $code.hashCode());
        final java.lang.Object $address = this.getAddress();
        result = result * PRIME + ($address == null ? 43 : $address.hashCode());
        final java.lang.Object $assignment = this.getAssignment();
        result = result * PRIME + ($assignment == null ? 43 : $assignment.hashCode());
        result = result * PRIME + this.getCanon();
        final java.lang.Object $epmcontract = this.getEpmcontract();
        result = result * PRIME + ($epmcontract == null ? 43 : $epmcontract.hashCode());
        final java.lang.Object $neighborhood = this.getNeighborhood();
        result = result * PRIME + ($neighborhood == null ? 43 : $neighborhood.hashCode());
        final java.lang.Object $sector = this.getSector();
        result = result * PRIME + ($sector == null ? 43 : $sector.hashCode());
        final java.lang.Object $stratum = this.getStratum();
        result = result * PRIME + ($stratum == null ? 43 : $stratum.hashCode());
        final java.lang.Object $keynumber = this.getKeynumber();
        result = result * PRIME + ($keynumber == null ? 43 : $keynumber.hashCode());
        final java.lang.Object $keylocation = this.getKeylocation();
        result = result * PRIME + ($keylocation == null ? 43 : $keylocation.hashCode());
        final long $latitude = java.lang.Double.doubleToLongBits(this.getLatitude());
        result = result * PRIME + (int) ($latitude >>> 32 ^ $latitude);
        final long $longitude = java.lang.Double.doubleToLongBits(this.getLongitude());
        result = result * PRIME + (int) ($longitude >>> 32 ^ $longitude);
        final java.lang.Object $situation = this.getSituation();
        result = result * PRIME + ($situation == null ? 43 : $situation.hashCode());
        final java.lang.Object $retirementcause = this.getRetirementcause();
        result = result * PRIME + ($retirementcause == null ? 43 : $retirementcause.hashCode());
        final java.lang.Object $city = this.getCity();
        result = result * PRIME + ($city == null ? 43 : $city.hashCode());
        final java.lang.Object $observations = this.getObservations();
        result = result * PRIME + ($observations == null ? 43 : $observations.hashCode());
        final java.lang.Object $extraobservations = this.getExtraobservations();
        result = result * PRIME + ($extraobservations == null ? 43 : $extraobservations.hashCode());
        final java.lang.Object $propertyof = this.getPropertyof();
        result = result * PRIME + ($propertyof == null ? 43 : $propertyof.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @javax.annotation.Generated("lombok")
    public java.lang.String toString() {
        return "Property(id=" + this.getId() + ", code=" + this.getCode() + ", address=" + this.getAddress() + ", assignment=" + this.getAssignment() + ", canon=" + this.getCanon() + ", epmcontract=" + this.getEpmcontract() + ", neighborhood=" + this.getNeighborhood() + ", sector=" + this.getSector() + ", stratum=" + this.getStratum() + ", keynumber=" + this.getKeynumber() + ", keylocation=" + this.getKeylocation() + ", latitude=" + this.getLatitude() + ", longitude=" + this.getLongitude() + ", situation=" + this.getSituation() + ", retirementcause=" + this.getRetirementcause() + ", city=" + this.getCity() + ", observations=" + this.getObservations() + ", extraobservations=" + this.getExtraobservations() + ", propertyof=" + this.getPropertyof() + ")";
    }
}
